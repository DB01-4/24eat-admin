[{"C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\index.js":"1","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\reportWebVitals.js":"2","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\App.js":"3","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Pages\\InventoryPage.js":"4","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Pages\\AddCategory.js":"5","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Pages\\AddDish.js":"6","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Pages\\Kitchen.js":"7","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Pages\\Category.js":"8","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Pages\\Dish.js":"9","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Main\\Navbar.js":"10","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Inventory\\SelectType.js":"11","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\API\\useFetch.js":"12","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Inventory\\EditInventoryButton.js":"13","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Inventory\\AddInventory.js":"14","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Inventory\\FetchAndShowTable.js":"15","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Kitchen\\Order.js":"16","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Category\\CategoryList.js":"17","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Dish\\DishList.js":"18","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Inventory\\InventoryTable.js":"19","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Kitchen\\OrderCard.js":"20","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Category\\CategoryEdit.js":"21","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Dish\\DishEdit.js":"22","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Inventory\\EditItemField.js":"23","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Inventory\\DeleteItemButton.js":"24"},{"size":494,"mtime":1639648139656,"results":"25","hashOfConfig":"26"},{"size":375,"mtime":1638183445951,"results":"27","hashOfConfig":"26"},{"size":1094,"mtime":1639734180393,"results":"28","hashOfConfig":"26"},{"size":1403,"mtime":1639648139650,"results":"29","hashOfConfig":"26"},{"size":2053,"mtime":1639648139645,"results":"30","hashOfConfig":"26"},{"size":3415,"mtime":1639648139646,"results":"31","hashOfConfig":"26"},{"size":161,"mtime":1639733766662,"results":"32","hashOfConfig":"26"},{"size":1227,"mtime":1639648139647,"results":"33","hashOfConfig":"26"},{"size":1175,"mtime":1639648139649,"results":"34","hashOfConfig":"26"},{"size":1976,"mtime":1639734010616,"results":"35","hashOfConfig":"26"},{"size":1065,"mtime":1638183466278,"results":"36","hashOfConfig":"26"},{"size":833,"mtime":1638183466266,"results":"37","hashOfConfig":"26"},{"size":907,"mtime":1639648139634,"results":"38","hashOfConfig":"26"},{"size":1909,"mtime":1639648139631,"results":"39","hashOfConfig":"26"},{"size":1365,"mtime":1639648139636,"results":"40","hashOfConfig":"26"},{"size":2471,"mtime":1641891677678,"results":"41","hashOfConfig":"26"},{"size":2399,"mtime":1639648139627,"results":"42","hashOfConfig":"26"},{"size":2538,"mtime":1639648139630,"results":"43","hashOfConfig":"26"},{"size":3163,"mtime":1639648139638,"results":"44","hashOfConfig":"26"},{"size":3220,"mtime":1639735215538,"results":"45","hashOfConfig":"26"},{"size":2537,"mtime":1639648139625,"results":"46","hashOfConfig":"26"},{"size":4124,"mtime":1639648139629,"results":"47","hashOfConfig":"26"},{"size":3808,"mtime":1639648139635,"results":"48","hashOfConfig":"26"},{"size":1931,"mtime":1639648139632,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"19ze0a7",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\index.js",[],["108","109"],"C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\reportWebVitals.js",[],"C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\App.js",[],"C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Pages\\InventoryPage.js",["110","111"],"import React from \"react\";\r\nimport AddInventory from \"../Components/Inventory/AddInventory\";\r\nimport EditInventoryButton from \"../Components/Inventory/EditInventoryButton\";\r\nimport \"../Style/App.css\";\r\nimport { useState } from \"react\";\r\nimport FetchAndShowTable from \"../Components/Inventory/FetchAndShowTable\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Button } from \"@mui/material\";\r\nimport SelectType from \"../Components/Inventory/SelectType\";\r\n\r\nfunction useForceUpdate() {\r\n  let [value, setState] = useState(true);\r\n  return () => setState(!value);\r\n}\r\nlet count = 0;\r\n\r\nconst InventoryPage = () => {\r\n  const [value, setValue] = useState(1);\r\n  const [filter, setFilter] = useState(\"produce\");\r\n  let forceUpdate = useForceUpdate();\r\n\r\n  function ChangeFilter(_filter) {\r\n    setFilter(_filter);\r\n    console.log(filter);\r\n    forceUpdate();\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>\r\n        <Typography variant=\"h4\" component=\"div\" gutterBottom>\r\n          {filter}\r\n        </Typography>\r\n      </h1>\r\n      <SelectType ChangeFilter={ChangeFilter} />\r\n      <FetchAndShowTable\r\n        count={value}\r\n        stateChanger={setValue}\r\n        filter={filter}\r\n      />\r\n      <div className=\"flex-container\">\r\n        <AddInventory stateChanger={setValue} filter={filter} />\r\n        <EditInventoryButton />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default InventoryPage;\r\n","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Pages\\AddCategory.js",["112","113","114"],"import React from \"react\";\r\nimport {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../Style/addCrud.css\"\r\nimport useFetch from \"../API/useFetch\"; \r\nimport {Button, TextField } from '@mui/material';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function AddCategory(){\r\n  let history = useHistory();\r\n\r\n  const initialFValues = {\r\n    name: '',\r\n    description: null,\r\n    image: ''\r\n  }\r\n  const [values, setValues] = useState(initialFValues);\r\n  const categoryUrl  = \"http://localhost:8080/categories/\"\r\n  const { data: categories, error, isPending } = useFetch(categoryUrl);\r\n\r\n    \r\n\r\n  const onChange = e => {\r\n    const { name, value } = e.target\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n    })\r\n    console.log(values)\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    axios.post(categoryUrl, values)\r\n      .then(function (response) {\r\n      console.log(response);\r\n      history.push('/Category')\r\n      })\r\n      .catch(function (error) {\r\n      console.log(error);\r\n      });\r\n  }\r\n        \r\n  \r\n  return (\r\n    <div>\r\n      <h1>Add Categories</h1>\r\n      <form>\r\n        <div className=\"txtfield\">\r\n        <TextField\r\n          id=\"outlined-multiline-flexible\"\r\n          label=\"Category name\"\r\n          name=\"name\"\r\n          multiline\r\n          maxRows={4}\r\n          onChange={onChange}\r\n        />\r\n        </div>\r\n\r\n        <div className=\"txtfield\">\r\n        <TextField\r\n          id=\"outlined-multiline-flexible\"\r\n          label=\"Description\"\r\n          name=\"description\"\r\n          multiline\r\n          maxRows={4}\r\n          onChange={onChange}\r\n        />\r\n        </div>\r\n\r\n        <div className=\"txtfield\">\r\n        <TextField\r\n          id=\"outlined-multiline-flexible\"\r\n          label=\"Image url\"\r\n          name=\"image\"\r\n          multiline\r\n          maxRows={4}\r\n          onChange={onChange}\r\n        />\r\n        </div>\r\n\r\n        </form>\r\n        <div className=\"btn\">\r\n        <Button onClick={handleSubmit} autoFocus>Submit</Button>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Pages\\AddDish.js",["115","116","117","118"],"import React from \"react\";\r\nimport {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport useFetch from \"../API/useFetch\";\r\nimport \"../Style/addCrud.css\"\r\nimport {Button, TextField, Select, InputLabel, MenuItem} from '@mui/material';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function AddDish(){\r\n  let history = useHistory();\r\n\r\n  const initialFValues = {\r\n    name: '',\r\n    description: null,\r\n    allergies: '',\r\n    price: 0,\r\n    category: '',\r\n    image: ''\r\n  }\r\n  const [values, setValues] = useState(initialFValues);\r\n  const dishUrl  = \"http://localhost:8080/products/\"\r\n  const { data: dishes, error, isPending } = useFetch(dishUrl);\r\n  const { data: categories } = useFetch(\"http://localhost:8080/categories/\"); \r\n    \r\n\r\n  const onChange = e => {\r\n    const { name, value } = e.target\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n    })\r\n    console.log(values)\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    axios.post(dishUrl, values)\r\n      .then(function (response) {\r\n      console.log(response);\r\n      history.push('/Dish')\r\n      })\r\n      .catch(function (error) {\r\n      console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleDelete = data => \r\n    axios.delete(dishUrl + data.id)\r\n      .then(function (response) {\r\n      console.log(response);\r\n      window.location.reload(false);\r\n      })\r\n      .catch(function (error) {\r\n      console.log(error);\r\n  });\r\n        \r\n  \r\n  return (\r\n    <div>\r\n      <h1>Dishes</h1>\r\n      <form>\r\n        <div className=\"txtfield\">\r\n        <TextField\r\n          id=\"outlined-multiline-flexible\"\r\n          label=\"Dish name\"\r\n          name=\"name\"\r\n          multiline\r\n          maxRows={4}\r\n          onChange={onChange}\r\n        />\r\n        </div>\r\n\r\n        <div className=\"txtfield\">\r\n        <TextField\r\n          id=\"outlined-multiline-flexible\"\r\n          label=\"Description\"\r\n          name=\"description\"\r\n          multiline\r\n          maxRows={4}\r\n          onChange={onChange}\r\n        />\r\n        </div>\r\n\r\n        <div className=\"txtfield\">\r\n        <TextField\r\n          id=\"outlined-multiline-flexible\"\r\n          label=\"Allergies\"\r\n          name=\"allergies\"\r\n          multiline\r\n          maxRows={4}\r\n          onChange={onChange}\r\n        />\r\n        </div>\r\n\r\n        <div className=\"txtfield\">\r\n        <TextField\r\n          id=\"outlined-multiline-flexible\"\r\n          label=\"Price\"\r\n          name=\"price\"\r\n          type=\"Number\"\r\n          maxRows={1}\r\n          onChange={onChange}\r\n        />\r\n        </div>\r\n\r\n        <div className=\"txtfield\">\r\n        <InputLabel>Category</InputLabel>\r\n        <Select\r\n          id=\"outlined-multiline-flexible\"\r\n          label=\"Category\"\r\n          name=\"category\"\r\n          onChange={onChange}\r\n        >\r\n          {categories && categories.map(category => {\r\n            return (\r\n              <MenuItem key={category.id} value={category}>{category.name}</MenuItem>\r\n            )}\r\n          )}\r\n        </Select>\r\n        </div>\r\n\r\n        <div className=\"txtfield\">\r\n        <TextField\r\n          id=\"outlined-multiline-flexible\"\r\n          label=\"Image url\"\r\n          name=\"image\"\r\n          multiline\r\n          maxRows={4}\r\n          onChange={onChange}\r\n        />\r\n        </div>\r\n\r\n        </form>\r\n        <div className=\"btn\">\r\n        <Button onClick={handleSubmit} autoFocus>Submit</Button>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Pages\\Kitchen.js",[],"C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Pages\\Category.js",["119","120"],"import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport \"../Style/categories.css\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useFetch from \"../API/useFetch\";\r\nimport CategoryList from \"../Components/Category/CategoryList\";\r\n\r\nexport default function Category(){\r\n\r\n  const url  = \"http://localhost:8080/categories/\"\r\n\r\n  const { data: categories, error, isPending } = useFetch(url);\r\n  \r\n  const handleDelete = data => \r\n  axios.delete(url+data.id)\r\n    .then(function (response) {\r\n      console.log(response);\r\n      window.location.reload(false);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n  });\r\n\r\n      return (\r\n          <div>\r\n              <div>\r\n                  <h1>Categories</h1>\r\n              </div>\r\n              <div>\r\n                  <Button variant=\"contained\" href=\"/AddCategory\">Add category</Button>\r\n              </div>\r\n\r\n\r\n              { error && <div>{ error }</div> }\r\n              { isPending && <div>Loading...</div> }\r\n              { categories && <CategoryList onDelete={handleDelete} url={url} categories={categories} /> }\r\n          </div>\r\n      )\r\n}","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Pages\\Dish.js",["121","122"],"import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport \"../Style/categories.css\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport useFetch from \"../API/useFetch\";\r\nimport DishList from \"../Components/Dish/DishList\";\r\n\r\nexport default function Dish(){\r\n\r\n  const url  = \"http://localhost:8080/products/\"\r\n\r\n  const { data: dishes, error, isPending } = useFetch(url);\r\n\r\n  const handleDelete = data => \r\n  axios.delete(url+data.id)\r\n    .then(function (response) {\r\n      console.log(response);\r\n      window.location.reload(false);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n  });\r\n\r\n      return (\r\n          <div>\r\n              <div>\r\n                  <h1>Dishes</h1>\r\n              </div>\r\n\r\n              <div>\r\n                  <Button variant=\"contained\" href=\"/AddDish\">Add dish</Button>\r\n              </div>\r\n\r\n              { error && <div>{ error }</div> }\r\n              { isPending && <div>Loading...</div> }\r\n              { dishes && <DishList onDelete={handleDelete} url={url} dishes={dishes} /> }\r\n          </div>\r\n      )\r\n}","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Main\\Navbar.js",[],"C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Inventory\\SelectType.js",[],"C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\API\\useFetch.js",[],"C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Inventory\\EditInventoryButton.js",[],"C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Inventory\\AddInventory.js",["123"],"import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function AddInventory({ stateChanger, filter }) {\r\n  console.log(filter);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const [count, setCount] = useState(0);\r\n  const onSubmit = (data) =>\r\n    axios\r\n      .post(\"http://localhost:8084/api/post\", data)\r\n      .then(function (response) {\r\n        console.log(response);\r\n        setCount(count + 1);\r\n        stateChanger(count);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        console.log(data);\r\n      });\r\n\r\n  return (\r\n    <div className=\"flex-child\">\r\n      <div>\r\n        <h1></h1>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <TextField\r\n            id=\"filled-basic\"\r\n            label=\"Name\"\r\n            variant=\"filled\"\r\n            {...register(\"name\", { required: true })}\r\n          />\r\n          {errors.exampleRequired && <p>This field is required</p>}\r\n\r\n          <TextField\r\n            disabled\r\n            id=\"outlined-disabled\"\r\n            label=\"Type\"\r\n            value={filter}\r\n            {...register(\"type\", { value: filter })}\r\n          />\r\n          {errors.exampleRequired && <p>This field is required</p>}\r\n\r\n          <TextField\r\n            type=\"number\"\r\n            id=\"filled-basic\"\r\n            label=\"Quantity\"\r\n            variant=\"filled\"\r\n            {...register(\"quantity\", { required: true })}\r\n          />\r\n          {errors.exampleRequired && <p>This field is required</p>}\r\n          <div>\r\n            <Button variant=\"outlined\" type=\"submit\">\r\n              Add Item\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Inventory\\FetchAndShowTable.js",[],"C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Kitchen\\Order.js",["124"],"C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Category\\CategoryList.js",["125","126","127","128"],"import React from 'react';\r\nimport { useState } from 'react';\r\nimport {Card, CardContent, CardActionArea, Button, Typography} from '@mui/material';\r\nimport Dialog from './CategoryEdit';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\n\r\nexport default function CategoryList  (props) {\r\n\r\n  const { categories, url, onDelete } = props\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState();\r\n\r\n\r\n  const handleClickOpen = (value) => {\r\n    setSelectedCard({...value, value})\r\n    console.log(selectedCard)\r\n    setOpen(true);\r\n  };\r\n\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n\r\n  };\r\n\r\n  const handleDelete = (data) => {\r\n    onDelete(data);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        selectedCard={selectedCard}\r\n        open={open}\r\n        onClose={handleClose}\r\n        url={url}\r\n        />\r\n      <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"left\">Id</TableCell>\r\n            <TableCell align=\"left\">Name</TableCell>\r\n            <TableCell align=\"left\">Description</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {categories.map((category) => (\r\n            <TableRow\r\n              key={category.name}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {category.id}\r\n              </TableCell>\r\n              <TableCell data-testid=\"category-name\" align=\"left\">{category.name}</TableCell>\r\n              <TableCell data-testid=\"category-description\" align=\"left\">{category.description}</TableCell>\r\n              <TableCell align=\"left\"><Button onClick={() => handleClickOpen(category)}>Edit</Button></TableCell>\r\n              <TableCell align=\"left\"><Button onClick={() => handleDelete(category)}>Delete</Button></TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Dish\\DishList.js",["129","130","131","132"],"import React from 'react';\r\nimport { useState } from 'react';\r\nimport {Card, CardContent, CardActionArea, Button, Typography} from '@mui/material';\r\nimport Dialog from './DishEdit';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\n\r\nexport default function DishList  (props) {\r\n\r\n  const { dishes, url, onDelete } = props\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState();\r\n\r\n\r\n  const handleClickOpen = (value) => {\r\n    setSelectedCard({...value, value})\r\n    console.log(selectedCard)\r\n    setOpen(true);\r\n  };\r\n\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n\r\n  };\r\n\r\n  const handleDelete = (data) => {\r\n    onDelete(data);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        selectedCard={selectedCard}\r\n        open={open}\r\n        onClose={handleClose}\r\n        url={url}\r\n        />\r\n      <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"left\">Id</TableCell>\r\n            <TableCell align=\"left\">Name</TableCell>\r\n            <TableCell align=\"left\">Description</TableCell>\r\n            <TableCell align=\"left\">price</TableCell>\r\n            <TableCell align=\"left\">allergies</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {dishes.map((dish) => (\r\n            <TableRow\r\n              key={dish.name}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {dish.id}\r\n              </TableCell>\r\n              <TableCell align=\"left\">{dish.name}</TableCell>\r\n              <TableCell align=\"left\">{dish.description}</TableCell>\r\n              <TableCell align=\"left\">{dish.price}</TableCell>\r\n              <TableCell align=\"left\">{dish.allergies}</TableCell>\r\n              <TableCell align=\"left\"><Button onClick={() => handleClickOpen(dish)}>Edit</Button></TableCell>\r\n              <TableCell align=\"left\"><Button onClick={() => handleDelete(dish)}>Delete</Button></TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Inventory\\InventoryTable.js",[],"C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Kitchen\\OrderCard.js",["133"],"import { useEffect, useState } from 'react';\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button'\r\nimport { CardActions } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst apiUrl = \"http://localhost:8080/api\";\r\n\r\nconst OrderCard = ({order, FinishOrder}) => {\r\n\r\n    const [orderStatus, setOrderStatus] = useState(order.status);\r\n    const [statusColor, setStatusColor]= useState();\r\n\r\n    const UpdateStatusColor = () => {\r\n        switch(orderStatus) {\r\n            case 0: setStatusColor('Red');\r\n            break;\r\n            case 1: setStatusColor('Yellow');\r\n            break;\r\n            case 2: setStatusColor('Green');\r\n            break;\r\n            default: setStatusColor('Purple');\r\n        }\r\n    }\r\n\r\n    const UpdateStatus = (status) => {\r\n        axios\r\n        .put(`${apiUrl}/public/orders/${order.id}`, {status: status})\r\n        .then((response) => {\r\n            console.log(\"New order status is: \" + response.data.status);\r\n            //change order status in local storage array\r\n            var old_data = JSON.parse(localStorage.getItem('orders'));\r\n            old_data.find((element) => {\r\n            if(element.id === order.id){\r\n                element.status = response.data.status;\r\n            }})\r\n            localStorage.setItem('orders', JSON.stringify(old_data));\r\n        })\r\n    }\r\n\r\n    const GetNextStatusText = () => {\r\n        const defaultText = 'Change to: '\r\n        switch(orderStatus) {\r\n            case 0: return defaultText + 'In Progress';\r\n            case 1: return defaultText + 'Done';\r\n            case 2: return 'Finish';\r\n            default: return '';\r\n        }\r\n    }\r\n\r\n    const ChangeStatus = (order) => {\r\n        switch(orderStatus) {\r\n            case 0: setOrderStatus(1);\r\n                    UpdateStatusColor();\r\n                    UpdateStatus(1);\r\n            break;\r\n            case 1: setOrderStatus(2)\r\n                    UpdateStatusColor();\r\n                    UpdateStatus(2);\r\n            break;\r\n            case 2: FinishOrder(order);\r\n            break;\r\n            default: setOrderStatus(0)\r\n                     UpdateStatusColor();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        UpdateStatusColor();\r\n    })\r\n\r\n    return (\r\n    <Card sx={{ minWidth: 275 }} style={{ display: 'inline-block', margin: '15px', border: '5px solid', borderColor: statusColor}} variant=\"outlined\">\r\n        <CardContent>\r\n            <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n                Table: {order.tableId} | Order: {order.id} | Status: {orderStatus}\r\n            </Typography>\r\n            {order.orderItems.map(dish => ( \r\n                <Typography key={dish.id} variant=\"h6\" component=\"div\">\r\n                     {dish.quantity} x {dish.product.name} \r\n                </Typography>\r\n             ))}\r\n        </CardContent>\r\n        <CardActions sx={{ float: 'right'}}>\r\n            <Button onClick={() => ChangeStatus(order)} size=\"small\">{GetNextStatusText()}</Button>\r\n        </CardActions>\r\n    </Card>\r\n    )\r\n}\r\n\r\nexport default OrderCard;","C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Category\\CategoryEdit.js",[],"C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Dish\\DishEdit.js",[],"C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Inventory\\EditItemField.js",[],"C:\\Users\\Milofow\\Desktop\\Repo's\\24eat-admin\\src\\Components\\Inventory\\DeleteItemButton.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":8,"column":10,"nodeType":"140","messageId":"141","endLine":8,"endColumn":16},{"ruleId":"138","severity":1,"message":"142","line":15,"column":5,"nodeType":"140","messageId":"141","endLine":15,"endColumn":10},{"ruleId":"138","severity":1,"message":"143","line":19,"column":17,"nodeType":"140","messageId":"141","endLine":19,"endColumn":27},{"ruleId":"138","severity":1,"message":"144","line":19,"column":29,"nodeType":"140","messageId":"141","endLine":19,"endColumn":34},{"ruleId":"138","severity":1,"message":"145","line":19,"column":36,"nodeType":"140","messageId":"141","endLine":19,"endColumn":45},{"ruleId":"138","severity":1,"message":"146","line":22,"column":17,"nodeType":"140","messageId":"141","endLine":22,"endColumn":23},{"ruleId":"138","severity":1,"message":"144","line":22,"column":25,"nodeType":"140","messageId":"141","endLine":22,"endColumn":30},{"ruleId":"138","severity":1,"message":"145","line":22,"column":32,"nodeType":"140","messageId":"141","endLine":22,"endColumn":41},{"ruleId":"138","severity":1,"message":"147","line":46,"column":9,"nodeType":"140","messageId":"141","endLine":46,"endColumn":21},{"ruleId":"138","severity":1,"message":"148","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":17},{"ruleId":"138","severity":1,"message":"149","line":5,"column":8,"nodeType":"140","messageId":"141","endLine":5,"endColumn":17},{"ruleId":"138","severity":1,"message":"148","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":17},{"ruleId":"138","severity":1,"message":"149","line":5,"column":8,"nodeType":"140","messageId":"141","endLine":5,"endColumn":17},{"ruleId":"150","severity":1,"message":"151","line":32,"column":9,"nodeType":"152","endLine":32,"endColumn":13},{"ruleId":"138","severity":1,"message":"153","line":2,"column":26,"nodeType":"140","messageId":"141","endLine":2,"endColumn":38},{"ruleId":"138","severity":1,"message":"154","line":3,"column":9,"nodeType":"140","messageId":"141","endLine":3,"endColumn":13},{"ruleId":"138","severity":1,"message":"155","line":3,"column":15,"nodeType":"140","messageId":"141","endLine":3,"endColumn":26},{"ruleId":"138","severity":1,"message":"156","line":3,"column":28,"nodeType":"140","messageId":"141","endLine":3,"endColumn":42},{"ruleId":"138","severity":1,"message":"157","line":3,"column":52,"nodeType":"140","messageId":"141","endLine":3,"endColumn":62},{"ruleId":"138","severity":1,"message":"154","line":3,"column":9,"nodeType":"140","messageId":"141","endLine":3,"endColumn":13},{"ruleId":"138","severity":1,"message":"155","line":3,"column":15,"nodeType":"140","messageId":"141","endLine":3,"endColumn":26},{"ruleId":"138","severity":1,"message":"156","line":3,"column":28,"nodeType":"140","messageId":"141","endLine":3,"endColumn":42},{"ruleId":"138","severity":1,"message":"157","line":3,"column":52,"nodeType":"140","messageId":"141","endLine":3,"endColumn":62},{"ruleId":"158","severity":1,"message":"159","line":35,"column":37,"nodeType":"160","messageId":"161","endLine":35,"endColumn":39},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'count' is assigned a value but never used.","'categories' is assigned a value but never used.","'error' is assigned a value but never used.","'isPending' is assigned a value but never used.","'dishes' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","'useForm' is defined but never used.","'TextField' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'W3CWebSocket' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'CardActionArea' is defined but never used.","'Typography' is defined but never used.","array-callback-return","Array.prototype.find() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]